services:
  postgres: # Relational Database
    image: docker.io/postgres:${POSTGRES_VERSION:-latest}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-homeserver}
      # Multiple databases (DB_1_NAME, DB_1_USER, DB_1_PASSWORD, DB_2_NAME, etc.)
      DB_1_NAME: ${DB_1_NAME:-homeserver}
      DB_1_USER: ${DB_1_USER:-postgres}
      DB_1_PASSWORD: ${DB_1_PASSWORD:-postgres}
      DB_2_NAME: ${DB_2_NAME:-langfuse}
      DB_2_USER: ${DB_2_USER:-langfuse}
      DB_2_PASSWORD: ${DB_2_PASSWORD:-langfuse}
      DB_3_NAME: ${DB_3_NAME:-mastra}
      DB_3_USER: ${DB_3_USER:-mastra}
      DB_3_PASSWORD: ${DB_3_PASSWORD:-mastra}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
    networks:
      - homeserver-network

volumes:
  postgres_data: